from .nodes import Intent, Plan, Result
from ..models.sql_agent import question_to_sql
from ..guards.sql_guard import enforce_read_only_and_limit
from ..executors.sqlite_exec import run_sql

def run_pipeline(question: str) -> Result:
    intent = Intent(raw=question, parsed={})
    plan = Plan(steps=["parse","retrieve_schema","plan","generate_sql","guard","execute","postprocess"])
    
    # Generate SQL with LangChain agent
    sql = question_to_sql(question)
    plan.sql = sql
    
    # Guard + execute as before
    safe_sql, reason = enforce_read_only_and_limit(sql)
    table = run_sql(safe_sql)
    return Result(table=table, explanation="Generated by LangChain SQL Agent", guard_reason=reason)
